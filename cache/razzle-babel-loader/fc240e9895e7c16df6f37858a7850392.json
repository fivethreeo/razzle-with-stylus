{"ast":null,"code":"var __jsx = React.createElement;\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport { hydrate } from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Hydrate, QueryClient, QueryClientProvider } from \"react-query\";\nvar dehydratedState = window.__REACT_QUERY_STATE__;\nvar queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true\n    }\n  }\n});\nhydrate(__jsx(QueryClientProvider, {\n  client: queryClient\n}, __jsx(Hydrate, {\n  state: dehydratedState\n}, __jsx(BrowserRouter, null, __jsx(HelmetProvider, null, __jsx(App, null))))), document.getElementById(\"root\"));\n\nif (module.hot) {\n  module.hot.accept();\n}","map":{"version":3,"sources":["/sandbox/src/real.client.js"],"names":["App","BrowserRouter","React","hydrate","HelmetProvider","Hydrate","QueryClient","QueryClientProvider","dehydratedState","window","__REACT_QUERY_STATE__","queryClient","defaultOptions","queries","suspense","document","getElementById","module","hot","accept"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,mBAA/B,QAA0D,aAA1D;AAEA,IAAMC,eAAe,GAAGC,MAAM,CAACC,qBAA/B;AACA,IAAMC,WAAW,GAAG,IAAIL,WAAJ,CAAgB;AAClCM,EAAAA,cAAc,EAAE;AACdC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE;AADH;AADK;AADkB,CAAhB,CAApB;AAQAX,OAAO,CACL,MAAC,mBAAD;AAAqB,EAAA,MAAM,EAAEQ;AAA7B,GACE,MAAC,OAAD;AAAS,EAAA,KAAK,EAAEH;AAAhB,GACE,MAAC,aAAD,QACE,MAAC,cAAD,QACE,MAAC,GAAD,OADF,CADF,CADF,CADF,CADK,EAULO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVK,CAAP;;AAaA,IAAIC,MAAM,CAACC,GAAX,EAAgB;AACdD,EAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX;AACD","sourcesContent":["import App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport React from \"react\";\nimport { hydrate } from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { Hydrate, QueryClient, QueryClientProvider } from \"react-query\";\n\nconst dehydratedState = window.__REACT_QUERY_STATE__;\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      suspense: true\n    }\n  }\n});\n\nhydrate(\n  <QueryClientProvider client={queryClient}>\n    <Hydrate state={dehydratedState}>\n      <BrowserRouter>\n        <HelmetProvider>\n          <App />\n        </HelmetProvider>\n      </BrowserRouter>\n    </Hydrate>\n  </QueryClientProvider>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept();\n}\n"]},"metadata":{},"sourceType":"module"}